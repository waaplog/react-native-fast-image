// Safe property access with a fallback mechanism
def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

buildscript {
    if (project == rootProject) {
        repositories {
            google()
            mavenCentral()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:8.0.2' // Updated to a more recent version
        }
    }
}

apply plugin: 'com.android.library'

android {
    namespace 'com.dylanvann.fastimage' // Replace with your actual namespace
    compileSdkVersion safeExtGet('compileSdkVersion', 33) // Updated SDK version
    buildToolsVersion safeExtGet('buildToolsVersion', '33.0.0') // Updated build tools version
    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 21) // Updated min SDK version
        targetSdkVersion safeExtGet('targetSdkVersion', 33) // Updated target SDK version
        versionCode 1
        versionName "1.0"
    }
    sourceSets {
        main {
            java {
                if (safeExtGet('excludeAppGlideModule', false)) {
                    srcDir "src"
                    exclude "**/FastImageGlideModule.java"
                }
            }
        }
    }
    lintOptions {
        abortOnError false
    }
}

repositories {
    mavenLocal()
    maven {
        url "$rootDir/../node_modules/react-native/android"
    }
    maven {
        url "$rootDir/../node_modules/jsc-android/dist"
    }
    google()
    mavenCentral()
}

def glideVersion = safeExtGet('glideVersion', '4.12.0')

dependencies {
    implementation 'com.facebook.react:react-native:0.64.2'  // From node_modules
    implementation "com.github.bumptech.glide:glide:${glideVersion}"
    implementation "com.github.bumptech.glide:okhttp3-integration:${glideVersion}"
    implementation "com.github.zjupure:webpdecoder:2.0.${glideVersion}"
    annotationProcessor "com.github.bumptech.glide:compiler:${glideVersion}"

}
